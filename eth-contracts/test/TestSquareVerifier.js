// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier');
// - use the contents from proof.json generated from zokrates steps
const { proof, inputs } = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {
    const owner = accounts[0];
    describe('Verification proof testing', () => {
        beforeEach(async() => {
            this.contract = await Verifier.new({ from: owner });
        })
        
        // Test verification with correct proof
        it('corret proof', async () => {
            const result = await this.contract.verifyTx.call(proof, inputs);
            assert.equal(result, true, "Invalid result, should be true");
        })

        // Test verification with incorrect proof
        it('incorrect proof', async () => {
            const result = await this.contract.verifyTx.call(proof, [123, 456]);
            assert.equal(result, false, "Invalid result, should be false");
        })
    })
})
    
